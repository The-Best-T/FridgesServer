<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server</name>
    </assembly>
    <members>
        <member name="M:Server.Controllers.AuthenticationController.GetProductsOptions">
            <summary>
            Get available queries 
            </summary>
            <param></param>
            <returns>All avaiable queries in header</returns>
            <response code="200">Returns all avaiable queries in header</response>
        </member>
        <member name="M:Server.Controllers.AuthenticationController.RegisterUser(Entities.Dto.User.UserForRegistrationDto)">
            <summary>
            Registration new user
            </summary>
            <param name="userForRegistration"></param>
            <returns></returns>
            <response code="201">Registration was success</response>
            <response code="400">Model for registration is invalid or user is already exists</response>
        </member>
        <member name="M:Server.Controllers.AuthenticationController.Authenticate(Entities.Dto.User.UserForAuthenticationDto)">
            <summary>
            Authentication with login and password
            </summary>
            <param name="user"></param>
            <returns>JWT</returns>
            <response code="200">Authentication was success</response>
            <response code="401">Wrong login or password</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.GetFridgeModelsOptions">
            <summary>
            Get available queries 
            </summary>
            <param></param>
            <returns>All avaiable queries in header</returns>
            <response code="200">Returns all avaiable queries in header</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.GetFridgeModel(System.Guid)">
            <summary>
            Get fridge model by id
            </summary>
            <param name="fridgeModelId"></param>
            <returns>One fridge model</returns>
            <response code="200">Returns one fridge model</response>
            <response code="404">Fridge model with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.GetFridgeModels(Entities.RequestFeatures.FridgeModelParameters)">
            <summary>
            Gets the list of all fridge models
            </summary>
            <param name="parameters"></param>
            <returns> list of fridge models</returns>
            <response code="200">Returns all fridge models</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.CreateFridgeModel(Entities.Dto.FridgeModel.FridgeModelForCreationDto)">
            <summary>
            Create new fridge model
            </summary>
            <param name="fridgeModel"></param>
            <returns>A newly created fridge model</returns>
            <response code="201">Returns the newly fridge model</response>
            <response code="400">FridgeModelForCreationDto is null</response>
            <response code="422">FridgeModelForCreationDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.DeleteFridgeModel(System.Guid)">
            <summary>
            Delete frige model by id
            </summary>
            <param name="fridgeModelId"></param>
            <returns></returns>
            <response code="204">Fridge model deleted</response>
            <response code="404">Fridge model with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeModelsController.UpdateFridgeModel(System.Guid,Entities.Dto.FridgeModel.FridgeModelForUpdateDto)">
            <summary>
            Update fridge model by id
            </summary>
            <param name="fridgeModelId"></param>
            <param name="fridgeModel"></param>
            <returns></returns>
            <response code="204">Fridge model updated</response>
            <response code="400">FridgeModelForUpdateDto is null</response>
            <response code="404">Fridge model with this id not found</response>
            <response code="422">FridgeModelForUpdateDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.GetFridgeProductsOptions">
            <summary>
            Get available queries 
            </summary>
            <param></param>
            <returns>All avaiable queries in header</returns>
            <response code="200">Returns all avaiable queries in header</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.GetProductForFridge(System.Guid,System.Guid)">
            <summary>
            Get one product from fridge by fridge id and product id
            </summary>
            <param name="fridgeId"></param>
            <param name="productId"></param>
            <returns>One product from the fridge</returns>
            <response code="200">Returns one product from the fridge</response>
            <response code="404">Fridge or product in this fridge with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.GetProductsForFridge(System.Guid,Entities.RequestFeatures.FridgeProductParameters)">
            <summary>
            Get all product from fridge 
            </summary>
            <param name="fridgeId"></param>
            <param name="parameters"></param>
            <returns>List of products from the fridge </returns>
            <response code="200">Returns list of products from the fridge</response>
            <response code="404">Fridge with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.AddProductInFridge(System.Guid,Entities.Dto.FridgeProduct.FridgeProductForCreationDto)">
            <summary>
            Add new product in fridge
            </summary>
            <param name="fridgeId"></param>
            <param name="fridgeProduct"></param>
            <returns>The newly product from the fridge</returns>
            <response code="201">Returns the newly product from the fridge</response>
            <response code="400">FridgeProductForCreationDto is null</response>
            <response code="404">Fridge or product with this id not found</response>
            <response code="422">FridgeProductForCreationDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.DeleteProductFromFridge(System.Guid,System.Guid)">
            <summary>
            Delete product from fridge
            </summary>
            <param name="fridgeId"></param>
            <param name="productId"></param>
            <returns></returns>
            <response code="204">Product deleted from the fridge</response>
            <response code="404">Fridge or product in this fridge with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgeProductsController.UpdateProductForFridge(System.Guid,System.Guid,Entities.Dto.FridgeProduct.FridgeProductForUpdateDto)">
            <summary>
            Update product in fridge
            </summary>
            <param name="fridgeId"></param>
            <param name="productId"></param>
            <param name="fridgeProduct"></param>
            <returns></returns>
            <response code="204">Product deleted from the fridge</response>
            <response code="400">FridgeProductForCreationDto is null</response>
            <response code="404">Fridge or product with this id not found</response>
            <response code="422">FridgeProductForCreationDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.GetFridgesOptions">
            <summary>
            Get available queries 
            </summary>
            <param></param>
            <returns>All avaiable queries in header</returns>
            <response code="200">Returns all avaiable queries in header</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.GetFridge(System.Guid)">
            <summary>
            Get fridge by id
            </summary>
            <param name="fridgeId"></param>
            <returns>One fridge</returns>
            <response code="200">Returns one fridge</response>
            <response code="404">Fridge with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.GetFridges(Entities.RequestFeatures.FridgeParameters)">
            <summary>
            Gets the list of all fridges
            </summary>
            <param name="parameters"></param>
            <returns> list of fridgs</returns>
            <response code="200">Returns all fridgs</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.CreateFridge(Entities.Dto.Fridge.FridgeForCreationDto)">
            <summary>
            Create new fridge
            </summary>
            <param name="fridge"></param>
            <returns>A newly created fridge</returns>
            <response code="201">Returns the newly fridge</response>
            <response code="400">FridgeForCreationDto is null</response>
            <response code="404">This fridge model not found</response>
            <response code="422">FridgeForCreationDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.DeleteFridge(System.Guid)">
            <summary>
            Delete frige by id
            </summary>
            <param name="fridgeId"></param>
            <returns></returns>
            <response code="204">Fridge deleted</response>
            <response code="404">Fridge with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.UpdateFridge(System.Guid,Entities.Dto.Fridge.FridgeForUpdateDto)">
            <summary>
            Update fridge by id
            </summary>
            <param name="fridgeId"></param>
            <param name="fridge"></param>
            <returns></returns>
            <response code="204">Fridge updated</response>
            <response code="400">FridgeForUpdateDto is null</response>
            <response code="404">Fridge with this id not found</response>
            <response code="422">FridgeForUpdateDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.FridgesController.FillFridges">
            <summary>
            In all fridges set quantity of products to standard quantity if quantity is 0 
            </summary>
            <returns></returns>
            <response code="200">Fridges are filled</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.GetProductsOptions">
            <summary>
            Get available queries 
            </summary>
            <param></param>
            <returns>All avaiable queries in header</returns>
            <response code="200">Returns all avaiable queries in header</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.GetProduct(System.Guid)">
            <summary>
            Get product by id
            </summary>
            <param name="productId"></param>
            <returns>One product</returns>
            <response code="200">Returns one product</response>
            <response code="404">Product with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.GetProducts(Entities.RequestFeatures.ProductParameters)">
            <summary>
            Gets the list of all products
            </summary>
            <param name="parameters"></param>
            <returns> list of products</returns>
            <response code="200">Returns all products</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.CreateProduct(Entities.Dto.Product.ProductForCreationDto)">
            <summary>
            Create new product
            </summary>
            <param name="product"></param>
            <returns>A newly created product</returns>
            <response code="201">Returns the newly product</response>
            <response code="400">ProductForCreationDto is null</response>
            <response code="422">ProductForCreationDto is invalid</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.DeleteProduct(System.Guid)">
            <summary>
            Delete product by id
            </summary>
            <param name="productId"></param>
            <returns></returns>
            <response code="204">Product deleted</response>
            <response code="404">Product with this id not found</response>
            <response code="500">Server error</response>
        </member>
        <member name="M:Server.Controllers.ProductsController.UpdateProduct(System.Guid,Entities.Dto.Product.ProductForUpdateDto)">
            <summary>
            Update product by id
            </summary>
            <param name="productId"></param>
            <param name="product"></param>
            <returns></returns>
            <response code="204">product updated</response>
            <response code="400">ProductForUpdateDto is null</response>
            <response code="404">Product with this id not found</response>
            <response code="422">ProductForUpdateDto is invalid</response>
            <response code="500">Server error</response>
        </member>
    </members>
</doc>
